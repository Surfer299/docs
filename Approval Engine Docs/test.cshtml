@model ApprovalComponentLib.Models.PendingApprovalsViewModel
@{
    var cssClass = ViewData["CardCssClass"] ?? "card mb-4";
    var requireCommentOnReject = ViewData["RequireCommentOnReject"] != null ? (bool)ViewData["RequireCommentOnReject"] : true;
    var approverRoleColumnClass = ViewData["ApproverRoleColumnClass"] ?? "col-3"; // Default to ~25% width
}
<div id="pendingApprovalsCard" class="@cssClass">
    <div class="card-header">
        <h4>Pending Approvals</h4>
    </div>
    <div class="card-body">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th class="@approverRoleColumnClass">Approver Role</th>
                    <th>Order</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="pendingTableBody">
                @foreach (var approval in Model.PendingApprovals)
                {
                    <tr data-approval-id="@approval.Id">
                        <td class="@approverRoleColumnClass">@approval.ApproverRole @(approval.IsParallel ? "(Parallel)" : "")</td>
                        <td>@approval.Order</td>
                        <td><span class="badge @(approval.Status == "Pending" ? "badge-warning" : approval.Status == "Approved" ? "badge-success" : "badge-danger")">@approval.Status</span></td>
                        <td>
                            @if (Model.CanUserAct(approval))
                            {
                                <div class="action-buttons">
                                    <button type="button" class="btn btn-success btn-sm mr-1 approve-reject-btn" 
                                            data-action="Approve" 
                                            data-approval-id="@approval.Id" 
                                            data-transaction-id="@Model.TransactionId" 
                                            data-toggle="collapse" 
                                            data-target="#commentPanel-@approval.Id">Approve</button>
                                    <button type="button" class="btn btn-danger btn-sm mr-1 approve-reject-btn" 
                                            data-action="Reject" 
                                            data-approval-id="@approval.Id" 
                                            data-transaction-id="@Model.TransactionId" 
                                            data-toggle="collapse" 
                                            data-target="#commentPanel-@approval.Id">Reject</button>
                                </div>
                            }
                        </td>
                    </tr>
                    @if (Model.CanUserAct(approval))
                    {
                        <tr class="comment-row">
                            <td colspan="4">
                                <div class="collapse" id="commentPanel-@approval.Id">
                                    <div class="card card-body border-0 p-3">
                                        <div class="form-group">
                                            <label for="commentInput-@approval.Id" class="form-label">Comment <span class="comment-required text-danger" style="display:none;">(required for Reject)</span></label>
                                            <textarea class="form-control comment-input" id="commentInput-@approval.Id" rows="3"></textarea>
                                        </div>
                                        <div class="d-flex justify-content-end">
                                            <button type="button" class="btn btn-primary btn-sm mr-1 submit-comment-btn" 
                                                    data-approval-id="@approval.Id" 
                                                    data-transaction-id="@Model.TransactionId">Submit</button>
                                            <button type="button" class="btn btn-secondary btn-sm cancel-comment-btn" 
                                                    data-toggle="collapse" 
                                                    data-target="#commentPanel-@approval.Id">Cancel</button>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Bootstrap 4 Toast Container -->
<div class="toast" id="approvalToast" role="alert" aria-live="assertive" aria-atomic="true" data-autohide="true" data-delay="5000" style="position: fixed; bottom: 20px; right: 20px;">
    <div class="toast-header">
        <strong class="mr-auto">Approval Status</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="toast-body"></div>
</div>

<script>
function initializeApprovalComponent(processApiUrl, refreshApiUrl, requireCommentOnReject = true) {
    $(document).ready(function () {
        // Initialize Bootstrap 4 toast
        $('#approvalToast').toast({ autohide: true, delay: 5000 });

        // Handle Approve/Reject button click
        $('.approve-reject-btn').click(function () {
            const row = $(this).closest('tr');
            const action = $(this).data('action');
            const approvalId = $(this).data('approval-id');
            const transactionId = $(this).data('transaction-id');
            const commentPanel = $('#commentPanel-' + approvalId);

            // Hide all other comment panels
            $('.comment-row .collapse').not(commentPanel).collapse('hide');

            // Update comment required label
            if (requireCommentOnReject && action === 'Reject') {
                commentPanel.find('.comment-required').show();
            } else {
                commentPanel.find('.comment-required').hide();
            }

            // Store action in comment panel
            commentPanel.data('action', action);
            commentPanel.data('approval-id', approvalId);
            commentPanel.data('transaction-id', transactionId);
        });

        // Handle Submit button click
        $('.submit-comment-btn').click(function () {
            const row = $(this).closest('tr');
            const commentPanel = row.find('.collapse');
            const action = commentPanel.data('action');
            const approvalId = commentPanel.data('approval-id');
            const transactionId = commentPanel.data('transaction-id');
            const comment = row.find('.comment-input').val().trim();

            if (requireCommentOnReject && action === 'Reject' && !comment) {
                $('#approvalToast .toast-body').text('A comment is required when rejecting an approval.');
                $('#approvalToast .toast-header').addClass('bg-danger text-white').removeClass('bg-success');
                $('#approvalToast').toast('show');
                return;
            }

            const data = {
                approvalId: approvalId,
                transactionId: transactionId,
                action: action,
                comment: comment
            };

            $.ajax({
                url: processApiUrl,
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json; charset=utf-8',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        // Hide comment panel
                        commentPanel.collapse('hide');
                        // Refresh the approval view
                        $.ajax({
                            url: refreshApiUrl + '?transactionId=' + encodeURIComponent(transactionId),
                            type: 'GET',
                            success: function (html) {
                                $('#pendingApprovalsCard').replaceWith(html);
                                // Reinitialize event handlers
                                initializeApprovalComponent(processApiUrl, refreshApiUrl, requireCommentOnReject);
                                $('#approvalToast .toast-body').text(action + ' action submitted successfully.');
                                $('#approvalToast .toast-header').addClass('bg-success text-white').removeClass('bg-danger');
                                $('#approvalToast').toast('show');
                            },
                            error: function () {
                                $('#approvalToast .toast-body').text('Failed to refresh the approval view.');
                                $('#approvalToast .toast-header').addClass('bg-danger text-white').removeClass('bg-success');
                                $('#approvalToast').toast('show');
                            }
                        });
                    } else {
                        $('#approvalToast .toast-body').text('Error: ' + response.message);
                        $('#approvalToast .toast-header').addClass('bg-danger text-white').removeClass('bg-success');
                        $('#approvalToast').toast('show');
                    }
                },
                error: function () {
                    $('#approvalToast .toast-body').text('An error occurred while processing the request.');
                    $('#approvalToast .toast-header').addClass('bg-danger text-white').removeClass('bg-success');
                    $('#approvalToast').toast('show');
                }
            });
        });

        // Handle Cancel button click
        $('.cancel-comment-btn').click(function () {
            const row = $(this).closest('tr');
            row.find('.comment-input').val(''); // Clear comment
        });
    });
}
</script>